 
<%args>
$input_map => ()
$input_chr => ()

</%args>
<& ../site/header.mas &>

 <style type="text/css">

  .label {
        z-index: 10;
        pointer-events: none;
        text-anchor: start;
        /*font-size: 0.9rem;*/
        text-shadow: 0 0 3px #fff;
        fill: rgb(70, 70, 70);
      }

    .label-bg {
        pointer-events: none;
        text-anchor: start;
        fill: none;
        stroke: white;
        /*font-size: 0.99rem;*/
        stroke-width: 0.9rem;
        opacity: 0.9;
      }

</style>

<!-- <body> -->
  <div id="ballsWaveG" class="overlay">
    <div id="ballsWaveG_1" class="ballsWaveG"></div>
    <div id="ballsWaveG_2" class="ballsWaveG"></div>
    <div id="ballsWaveG_3" class="ballsWaveG"></div>
    <div id="ballsWaveG_4" class="ballsWaveG"></div>
    <div id="ballsWaveG_5" class="ballsWaveG"></div>
    <div id="ballsWaveG_6" class="ballsWaveG"></div>
    <div id="ballsWaveG_7" class="ballsWaveG"></div>
    <div id="ballsWaveG_8" class="ballsWaveG"></div>
  </div>
 <div class="container" id="container">
  <br><br>
  <h2 class="my-4" align="center">All Maps
        <small></small>
  </h2>
  
<script type="text/javascript">
   
  var request = new XMLHttpRequest();

  // request.open('GET', 'https://sgn-test.sgn.cornell.edu/brapi/v1/maps/'); 
  request.open('GET', 'http://192.168.33.10:3100/brapi/v1/maps/'); 

  //Working with list of maps and creating html div for each of them
  request.onreadystatechange = function() {

    if (this.readyState === 4) {

    var myArr = JSON.parse(this.responseText).result.data;

      for (var  i = 0; i<myArr.length; i++){

        var iDiv = document.createElement('div');
        iDiv.className = 'row';

        var innerDiv = document.createElement('div');
        innerDiv.className = 'col-md-6';
        innerDiv.id = 'map' + myArr[i].mapDbId;
        iDiv.appendChild(innerDiv);

        //Calling the chr drawing function
        maps(myArr[i].mapDbId);

        var innerDivT = document.createElement('div');
        innerDivT.className = 'col-md-6';
        innerDivT.id = 'mapp';
        iDiv.appendChild(innerDivT);
        innerDivT.innerHTML = "<h3>"+ myArr[i].name +"</h3><p>"+ myArr[i].species +"</p><p>Linkage groups: "+ myArr[i].linkageGroupCount +" <br>Type: "+ myArr[i].type +" <br>Unit: "+ myArr[i].unit +"<br>Marker count: "+ myArr[i].markerCount +"<br>Id: "+ myArr[i].mapDbId +"</p><a class='btn btn-primary' href='/Map/"+ myArr[i].mapDbId +"'>View map</a><hr>";

        document.getElementById('container').appendChild(iDiv);

       }
     }
             $('#ballsWaveG').hide();
  }

  request.send();

 </script>

<script>

//Function for dra chrs
function maps(map){

  var requestmap = new XMLHttpRequest();

  requestmap.open('GET', 'http://192.168.33.10:3100/brapi/v1/maps/'+ map ); 
  requestmap.onreadystatechange = function() {
    if (this.readyState === 4) {

      var myArr1 = JSON.parse(this.responseText);
      var LG =myArr1.result.linkageGroups;


      var svg = d3.select("div#map"+map).append("svg")
                  .attr("id", "matrixSVG1");


      var width =25;
      var height =  $("#map"+map).height()*0.8;
      var maxpos = Math.max.apply(Math,LG.map(function(o){return o.maxPosition;}));
      var conv = height/maxpos;

     for (var i = 0; i < LG.length; i++) {  

        svg.append("rect")
        .attr("id", "rect" )
        .attr("x", width*(i+1))
        .attr("y", width/2)
        .attr("rx", width/2)
        .attr("ry", width/2)
        .attr("width", width/1.5)
        .attr("height",  LG[i].maxPosition * conv)
        .attr("fill", 'transparent')
        .attr("stroke", "black")
        .style("stroke-width", 1);

        svg.append("rect")
        .attr("id", "rect" )
        .attr("x", width*(i+1))
        .attr("y", width)
        .attr("width", width/1.5)
        .attr("height", ( LG[i].maxPosition * conv - width ))
        .attr("fill", '#d88c49')
        .attr("stroke", "#d88c49")
        .style("stroke-width", 0);
      }
    }
  }
  requestmap.send();

};

</script>

</div>

<& ../site/footer.mas &>

</body>
</html>