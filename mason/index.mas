 
<%args>
$input_map => ()
$input_chr => ()

$map_id => undef
$map_version_id => undef
$hilite => undef
$size => 1
#$map_items
$short_name => "untitled map"
$long_name => "untitled map"
$force => 0
$physical => undef
#$referer
$abstract => ''
#$tempdir
#$basepath
#$map_url
#$chr_url
$comp_maps_url => ''
$default_map_id => 9
$private => ''
@hilite_markers => ()
$marker_stats => ''
$chromosome_stats => ''
$message => ''
#$overview_image
$can_overlay => 0
$parent1_stock_id => ''
$parent1_stock_name => '(unknown)'
$parent2_stock_id => ''
$parent2_stock_name => '(unknown)'

</%args>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
 <div class="container">
          <h2 align="center">All Maps</h2> 
 <form id="form" class="form-horizontal">
        <div class="form-group">
          <div >  
            <label>Map</label> 
            <select id="mapId" name="mapId">
              <option ><-----Select---></option>
              <option value="2">Tomato-EXPIMP 2001</option>
              <option value="9">Tomato-EXPEN 2000</option>
            </select>
             <a id="submit" class="btn btn-primary" href="#" onclick="selectMap(document.getElementById('mapId').value,'','');">Select</a>
            </div>
            </div>

       <script type="text/javascript">
         function selectFunction() {           
           document.getElementById('submit1').className = "btn btn-primary";     
           document.getElementById('submit2').className = "btn btn-primary";     
        };        
      </script>
    </form>
    <h3 id="tittle" align="center" ></h3>

  <!--<svg id="mainSVG" width="1000" height="750">-->
<div id="container" class="svg-container">
    <polygon id="poligono" points="" style="fill:none; stroke:#003300; stroke-width:3;"></polygon>
</div>
 <!-- </svg>-->
  <a id="submitchr" class="btn btn-primary" href="#" onclick=" selectMap(document.getElementById('mapId').value,list);" style="display: none;">Compare</a>



<script>


function nMap(){ return document.getElementById('mapId').value; }; 

 var width = parseInt(d3.select('div#container').style('width'), 10);

 var svg = d3.select("div#container").append("svg")
  .attr("width", "100%")
  .attr("height", "100%")
  .attr("viewBox", "0 0 " + (width - 10) + " " + (width / 2 + 10))
  .attr("preserveAspectRatio", "xMinYMid meet")
  .attr("id", "matrixSVG");

 svg.select("#brushid").remove();

 var isLinear = 1, axisSide=-1, chrZSide = 1;

  var sideComp=1;

 var chrWdt = 25,
  chrHgt = 150; //radius * Math.sin(radians(ang/2)),

  function distToZoom(){ 
    return chrWdt * 3 + isLinear*200; 
  }


 var y0 = 0;

 var y1 = d3.scaleLinear().range([0, chrHgt]);
 var y2 = d3.scaleLinear().range([-chrWdt, chrHgt + chrWdt]); 
 var yAxis =  d3.axisLeft(y1).tickSize(2).ticks(5); //.tickFormat(d3.format(".0s"));


function selectMap(map, list) {

  svg.selectAll("*").remove();
  var requestmap = new XMLHttpRequest();

  requestmap.open('GET', 'http://192.168.33.10:3100/brapi/v1/sgn_maps/'+ map ); 
  requestmap.onreadystatechange = function() {
    if (this.readyState === 4) {

      var myArr1 = JSON.parse(this.responseText);
  document.getElementById("tittle").innerHTML = myArr1.result.name;

}}
requestmap.send();


  var request = new XMLHttpRequest();

  request.open('GET', 'http://192.168.33.10:3100/brapi/v1/sgn_maps/'+ map + '/positions?pageSize=10000000'); 
//request.open('GET', 'http://localhost:3100/brapi/v1/sgn_maps/'+ map + '/positions?pageSize=10000000'); 

  request.onreadystatechange = function() {

    if (this.readyState === 4) {

      var myArr = JSON.parse(this.responseText);
      var result = fillArray(myArr);
      var data = result.data;
      var list = unique(result.list);

      var forZoom = 0;


      // Setting layout
      var radius = width / (list.length + 1),
          originX=radius,
          originY=50;

      for (var i = 0; i < list.length; i++) {

        // Filter data by chr;
        var dataByChr = data.filter(function(d) {
          return d.linkageGroup == list[i]
        });

        // Draw each chr
        chromosome(dataByChr, svg, chrWdt, chrHgt, 0, radius*i, y0, map,list[i], 0,isLinear,5,originX,originY,chrZSide,axisSide,sideComp);

        // We don't need to draw links in the linear graph for now
        /*   if (i<n){
                var datali = datal.filter(function(d) { return d.chrs == i }); 
                links  (datali, svg, originX, originY,0, chrWdt, chrHgt, 0 ,radius * i +chrWdt, radius * (i+1) , y0); } */
      }

    }

  }

request.send();
};

</script>

<form id="search_chr" method="post" enctype="multipart/form-data" action="/Map/view_chr" style="display: none;">
          <input class="form-control col-xs-2 panel-primary" value="<% $input_chr %>" name="input_chr" id="input_chr"/>
          <input class="form-control col-xs-2 panel-primary" value="<% $input_map %>" name="input_map" id="input_map"/>
</form>
</div>

