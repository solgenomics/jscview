 
<%args>
$input_map => ()
$dbhost => ()

</%args>

<style type="text/css">

.label {
      z-index: 10;
      pointer-events: none;
      text-anchor: start;
      font-size: 0.9rem;
      text-shadow: 0 0 3px #fff;
      fill: rgb(70, 70, 70);
    }

  .label-bg {
      pointer-events: none;
      text-anchor: start;
      fill: none;
      stroke: white;
      font-size: 0.9rem;
      stroke-width: 0.5rem;
      opacity: 0.9;
    }

</style>

<& ../site/header.mas &>

<main role="main" class="container">
    <br><br><br><br><br>
    <h3 id="tittle" align="center" style="color:navy;"></h3>

    <div id="container" class="svg-container">
      <polygon id="poligono" points="" style="fill:none; stroke:#003300; stroke-width:3;"></polygon>
    </div>

    <div id="comment" class="svg-container">
      <hr>
      <p id="comments"></p>
      <p id="type"></p>
      <p id="unit"></p> <br>   
      </p>
    </div>

    <script>
     var nmap =  '<% $input_map %>';
     var brApiSite = '<% $dbhost %>';
     var width = 800; 
     var height = 320;

     $('#ballsWaveG').show();
     
     var svg = d3.select("div#container").append("svg")
                  .attr("class", "svg-content")
                  .attr("viewBox", "0 0 " + width + " " + height ) 
                  .attr("preserveAspectRatio", "xMinYMid meet")
                  .attr("id", "matrixSVG");

     svg.select("#brushid").remove();

     var isLinear = 1, axisSide=-1, chrZSide = 1;
     var comp=false;
     var chrWdt = 20,
         chrHgt = 150; 

      function distToZoom(){ 
        return chrWdt * 3 + isLinear*200; 
      }

     var y0 = chrWdt*2;
     var y1 = d3.scaleLinear().range([ -chrHgt/2, chrHgt/2]); 
     var y2 = d3.scaleLinear().range([-chrHgt/2-chrWdt, chrHgt/2 + chrWdt]); 
     
     var yAxisR = d3.axisRight(y1).tickSize(3).ticks(5).tickFormat(d3.format(".2s"));
     var yAxisL = d3.axisLeft(y1).tickSize(3).ticks(5).tickFormat(d3.format(".2s"));

     var yAxisZoomR = d3.axisRight(y2).tickSize(3).ticks(5).tickFormat(d3.format(".2s"));
     var yAxisZoomL = d3.axisLeft(y2).tickSize(3).ticks(5).tickFormat(d3.format(".2s"));


     function selectMap(map) {

      
      svg.selectAll("*").remove();
      document.getElementById("tittle").innerHTML = "";
      var requestmap = new XMLHttpRequest();

      requestmap.open('GET', brApiSite + '/brapi/v1/maps/'+ map + '/?pageSize=1000000'); 

      requestmap.onreadystatechange = function() {
        if (this.readyState === 4) {
          var resp = JSON.parse(this.responseText);
          document.getElementById("tittle").innerHTML = resp.result.mapName;
          document.getElementById("type").innerHTML = "Type: " + resp.result.type;
          document.getElementById("unit").innerHTML = "Unit: " + resp.result.unit;
          document.getElementById("comments").innerHTML = resp.result.comments; 
        }
      }
      requestmap.send();

      var request = new XMLHttpRequest();

      request.open('GET', brApiSite + '/brapi/v1/maps/'+ map + '/positions?pageSize=5000000'); 

      request.onreadystatechange = function() {

      if (this.readyState === 4) {

        var myArr = JSON.parse(this.responseText); 
        var result = fillArray(myArr);
        var unit = myArr.result.unit;
        var data = result.data;        
        var list = unique(result.list).sort(sortNumber);
        var forZoom = 0;

          // Setting layout
          var radius = width / (list.length + 1),
          originX=30,
          originY=130;

          for (var  i = (list.length-1); i > -1;i--) {

            // Filter data by chr;
            var dataByChr = data.filter(function(d) {
              return d.linkage_group_name == list[i]
            });
 
            // Draw each chr
            chromosome(dataByChr, svg, chrWdt, chrHgt, 0, radius*i, y0, map,list[i], forZoom,isLinear,5,originX,originY,chrZSide,axisSide,comp,unit,list);

          }
        } 
        $('#ballsWaveG').hide();
      }
      request.send();      
    };

    selectMap(nmap); 

    function yAxisSide(axisSide){
      if (axisSide==1) return  yAxisR;
      else return  yAxisL;
    }

    </script>

    </main>

<& ../site/footer.mas &>

</body>
</html>

